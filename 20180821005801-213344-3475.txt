#include <iostream>
#include <cstdio>
#include <cstring>
#include <queue>
#include <algorithm>
using namespace std;
const int MAXN = 100005;
long long math[MAXN];
long long sums[MAXN];
bool cmp(const long long &a, const long long &b)
{
    return a > b;
}
int main()
{
    int n;
    while(~scanf("%d",&n))
    {
        memset(math, 0, sizeof(math));
        memset(sums, 0, sizeof(sums));
        for (int i = 0; i < n; i ++) {
            scanf("%I64d",&math[i]);
        }
        sort(math, math + n, cmp);
        sums[0] = 0;
        for (int i = 1; i < n; i ++) {
            sums[i] = sums[i - 1] + math[i];
        }
        long long ycl = 0;
        int te = 1;
        for (int i = 1; i < n; i ++) {
            ycl += te * math[i];
            te ++;
        }
        int q;
        scanf("%d",&q);
        for (int i = 0; i < q; i ++) {
            int num;
            long long re = 0;
            scanf("%d",&num);
            long long front = 0;
            long long flag = num;
            long long ojbk = 0;
            long long jishu = 1;
            if(num == 1)
            {
                printf("%I64d\n",ycl);
                continue;
            }
                if(flag >= n - 1)
                {
                    flag = n - 1;
                    re += jishu * (sums[flag]);
                }
                else
                {
                    ojbk =flag;
                    while(ojbk < n - 1)
                    {
                        re += (jishu * (sums[ojbk] - sums[front]));
                        jishu ++;
                        front = ojbk;
                        flag *= num;
                        ojbk += flag;
                    }
                    
                    if(front < n - 1 && ojbk >= n - 1)
                    {
                        re += (jishu * (sums[n - 1] - sums[front]));
                    }
                }
            printf("%I64d ",re);
        }
        printf("\n");
    }
    return 0;
}
