#include<stdio.h>
#include<string.h>
#define MAXN 1000005
typedef struct MYMATH
{
    int ans;
    int flag;
} mymath;
int read(int &x)
{
    char c=getchar();
    int f=1;x=0;
    while(c<'0'||c>'9')
    {
        if(c=='-')
            f=-f;
        c=getchar();
    }
    while(c>='0'&&c<='9')
    {
        x=x*10+c-'0';
        c=getchar();
    }
    x*=f;
}
void Out(int a)    //输出一个整型
{
    if(a<0)
    {
          putchar('-');
          a=-a;
    }
    if(a>9)
    Out(a/10);
    putchar(a%10+'0');
}
mymath math[MAXN];///储存数据
mymath team[MAXN];///储存队列
void get_max(int n,int k)///把最大值存在队列头
{
    int head,top,i;
    head=0;
    top=0;
    for(i=0; i<n; i++)
    {
        while(top>head&&math[i].ans>team[top].ans)
        {
            top--;
        }
        team[++top]=math[i];
        if(team[head+1].flag<=i-k)
        {
            head++;
        }
        if(i==k-1)
            Out(team[head+1].ans);
        else if(i>k-1)
            {printf(" ");
            Out(team[head+1].ans);
            }

    }
}
void get_min(int n,int k)///把最小值存在队列头
{
    int head,top,i;
    head=0;
    top=0;
    for(i=0; i<n; i++)
    {
        while(top>head&&math[i].ans<team[top].ans)
        {
            top--;
        }
        team[++top]=math[i];
        if(team[head+1].flag<=i-k)
        {
            head++;
        }
        if(i==k-1)
            Out(team[head+1].ans);
        else if(i>k-1)
            {printf(" ");
            Out(team[head+1].ans);
            }

    }
}
int main()
{
    int n,k;
    while(~scanf("%d%d",&n,&k))
    {
        for(int i=0; i<n; i++)
        {read(math[i].ans);
            math[i].flag=i;
        }

        //memset(team,0,sizeof(team));
        get_min(n,k);
        printf("\n");
        get_max(n,k);
        printf("\n");
    }
}
