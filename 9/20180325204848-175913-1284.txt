#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cstring>
#include<queue>
using namespace std;
int maps[15][15];
int vids[15][15];
typedef struct MYINT
{
    int x;
    int y;
} myint;
myint team[105];
myint read[15][15];
queue<myint>q;
int moves[4][2]= {-1,0,1,0,0,-1,0,1}; ///ио об вС ср (i-1,0) (i+1,0) (i,j-1) (i,j+1)
void bfs(int x1,int y1,int x2,int y2)/// i j i-y j-x
{
    myint begins;
    myint sss;
    begins.x=x1;
    begins.y=y1;
    q.push(begins);
    while(!q.empty())
    {
        //printf("...\n");
        begins=q.front();
        //printf("b=%d %d\n",begins.x,begins.y);
        q.pop();
        if(begins.x==x2&&begins.y==y2)
        {
            return ;
        }
        for(int i=0; i<4; i++)
        {
            sss.x=begins.x+moves[i][0];
            sss.y=begins.y+moves[i][1];
            if(vids[sss.x][sss.y]==0&&maps[sss.x][sss.y]==0)
            {
                //printf("x=%d y=%d\n",begins.x-1,begins.y-1);
                read[sss.x][sss.y]=begins;
                vids[sss.x][sss.y]=1;
                q.push(sss);
            }
        }
        //printf(".....\n");
    }
}
void input(int x,int y)
{
int xx,yy;
int i=0;
    while(x!=1||y!=1)
    {//printf("%d %d\n",x,y);
    team[i].x=x;
    team[i].y=y;
    i++;
        xx=read[x][y].x;
        yy=read[x][y].y;
        x=xx;
        y=yy;
    }
    team[i].x=x;
    team[i].y=y;
    for(int j=i;j!=-1;j--)
        printf("(%d, %d)\n",team[j].x-1,team[j].y-1);

}
int main()
{
    for(int i=0; i<15; i++)
        for(int j=0; j<15; j++)
            maps[i][j]=1;
    for(int i=1; i<=5; i++)
        for(int j=1; j<=5; j++)
            scanf("%d",&maps[i][j]);
    bfs(1,1,5,5);
    input(5,5);
    return 0;
}
