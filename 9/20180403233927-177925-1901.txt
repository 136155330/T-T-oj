#include<bits/stdc++.h>
using namespace std;
stack<double>q;
stack<char>stk;
stack<double>qq;
stack<char>stks;
char word[205];
int main()
{
    while(gets(word)!=NULL)
    {
        while(!q.empty())
            q.pop();
        while(!stk.empty())
            stk.pop();
        while(!qq.empty())
            qq.pop();
        while(!stks.empty())
            stks.pop();
        double ans,num=0;
        int len;
        len=strlen(word);
        if(len==1&&word[0]=='0')
        {
            break;
        }
        for(int i=0; i<len; i++)
        {

            if(word[i]>='0'&&word[i]<='9')
            {
                num=num*10+(word[i]-'0');
            }
            if(i==len-1)
            {
                if(stk.empty()||stk.top()=='+'||stk.top()=='-')
                {
                    q.push(num);
                    num=0;
                }
                else if(stk.top()=='*'||stk.top()=='/')
                {
                    if(stk.top()=='*')
                    {
                        stk.pop();
                        ans=num*q.top();
                        q.pop();
                        q.push(ans);
                        num=0;
                    }
                    else if(stk.top()=='/')
                    {
                        stk.pop();
                        ans=double(q.top())/double(num);
                        q.pop();
                        q.push(ans);
                        num=0;
                    }
                }
            }
            if(word[i]==' ')
            {
                if(word[i-1]>='0'&&word[i-1]<='9')
                {
                    if(stk.empty()||stk.top()=='+'||stk.top()=='-')
                    {
                        q.push(num);
                        num=0;
                    }
                    else if(stk.top()=='*'||stk.top()=='/')
                    {
                        if(stk.top()=='*')
                        {
                            stk.pop();
                            ans=num*q.top();
                            q.pop();
                            q.push(ans);
                            num=0;
                        }
                        else if(stk.top()=='/')
                        {
                            stk.pop();
                            ans=double(q.top())/double(num);
                            q.pop();
                            q.push(ans);
                            num=0;
                        }
                    }
                }
                if(word[i-1]=='+'||word[i-1]=='-'||word[i-1]=='*'||word[i-1]=='/')
                {
                    stk.push(word[i-1]);
                }
            }
        }
        while(!stk.empty())
        {
            stks.push(stk.top());
            stk.pop();
        }
        while(!q.empty())
        {
            qq.push(q.top());
            q.pop();
        }
        while(!qq.empty())
        {
            if(qq.size()==1)
            {
                printf("%.2lf\n",qq.top());
                qq.pop();
            }
            else
            {
                double nums;
                char cc;
                nums=qq.top();
                qq.pop();
                if(stks.size()!=0)
                {
                    cc=stks.top();
                    stks.pop();
                }
                if(cc=='+')
                {
                    nums+=qq.top();
                    qq.pop();
                    qq.push(nums);
                }
                else if(cc=='-')
                {
                    nums-=qq.top();
                    qq.pop();
                    qq.push(nums);
                }
            }
        }
    }
    return 0;
}
