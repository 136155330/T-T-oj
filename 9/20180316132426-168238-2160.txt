#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<math.h>
typedef long long ll;
typedef struct node
{
    int n;
    struct node *next[2];
} tire;
tire *creattire()
{
    tire *q;
    q=(tire *)malloc(sizeof(tire));
    q->n=0;
    for(int i=0; i<2; i++)
    {
        q->next[i]=NULL;
    }
    return q;
}
void addtire(int word[],tire *root,int n)
{
    for(int i=0; i<=n; i++)
    {
        int ans=word[i];
        if(root->next[ans]==NULL)
        {
            tire *q;
            q=creattire();
            root->next[ans]=q;
            root=root->next[ans];
        }
        else
            root=root->next[ans];
    }
}
void deletetire(tire *root)
{
    if(root==NULL)
        return ;
    for(int i=0; i<2; i++)
    {
        if(root->next[i]!=NULL)
        {
            deletetire(root->next[i]);
        }
    }
    free(root);
}
ll remath(int word[],tire *root,int n)
{
    int team[40];
    int j=0;
    for(int i=0; i<=n; i++)
    {
        if(root->next[word[i]]!=NULL)
        {
            team[j++]=word[i];
            root=root->next[word[i]];
        }
        else
        {
            if(word[i]==0)
            {
                team[j++]=1;
                root=root->next[1];
            }
            else
            {
                team[j++]=0;
                root=root->next[0];
            }
        }
    }
    ll sum=0;
    for(int i=n; i!=-1; i--)
    {
        sum+=team[i]*(1<<(n-i));
    }
    return sum;
}
int word[40];
int main()
{
    int t;
    tire *root;
    scanf("%d",&t);
    int y=0;
    while(t--)
    {
        printf("Case #%d:\n",++y);
        int n,k;
        scanf("%d%d",&n,&k);
        root=creattire();
        //int maxn=0;
        for(int i=0; i<n; i++)
        {
            ll num;
            int j=35;
            scanf("%I64d",&num);
            memset(word,0,sizeof(word));
            while(num!=0)
            {
                if(num&1)
                    word[j--]=1;
                else
                    word[j--]=0;
                num>>=1;
            }
            addtire(word,root,35);
        }
        for(int i=0; i<k; i++)
        {
            ll nums;
            scanf("%I64d",&nums);
            for(int i=0; i<40; i++)
                word[i]=1;
            int j=35;
            while(nums!=0)
            {
                if(nums&1)
                {
                    word[j--]=0;
                }
                else
                {
                    word[j--]=1;
                }
                nums>>=1;
            }
            nums=remath(word,root,35);
            printf("%I64d\n",nums);
        }
        deletetire(root);
    }
    return 0;
}