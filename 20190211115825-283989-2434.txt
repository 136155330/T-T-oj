#include <iostream>
#include <cstdio>
#include <cstring>
#include <queue>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
int n;
typedef struct NODE
{
    ll num, sum;
    struct NODE * next;
}node;
node * head;
node * creat_node(ll nu, ll su)
{
    node * p;
    p = new node;
    p -> num = nu;
    p -> sum = su;
    p -> next = NULL;
    return p;
}
void clear(node * p)
{
    if(p -> next == NULL)
    {
        delete p;
        return ;
    }
    clear(p -> next);
    delete p;
}
int main()
{
    while(~scanf("%d", &n))
    {
        head = creat_node(0, 0);
        //printf("%d\n", head -> num);
        for(int i = 0; i < n; i ++)
        {
            ll a, b, c;
            scanf("%lld", &a);
            if(a == 1)
            {
                scanf("%lld %lld", &b, &c);
                node * p = head;
                queue<pair<ll, ll>>que;
                while(!que.empty())
                    que.pop();
                while(p != NULL)
                {
                    if(p -> num <= b)
                    {
                        que.push(make_pair(p -> num + c, p -> sum == 0 ? 1 : p -> sum));
                    }
                    else
                    {
                        break;
                    }
                    p = p -> next;
                }
                node * pp;
                pp = head;
                while(!que.empty())
                {
                    pair<ll, ll>pa;
                    pa = que.front();
                    que.pop();
                    while(pp -> next && pp -> next -> num < pa.first)
                    {
                        pp = pp -> next;
                    }
                    if(pp -> next == NULL || pp -> next -> num > pa.first)
                    {
                        node * q = creat_node(pa.first, pa.second);
                        q -> next = pp -> next;
                        pp -> next = q;
                        pp = pp -> next;
                    }
                    else if(pp -> next -> num == pa.first)
                    {
                        pp -> next -> sum += pa.second;
                    }
                }
            }
            else if(a == 2)
            {
                node * pp = head;
                scanf("%lld", &b);
                ll begins = 1;
                ll sum = 0;
                pp = pp -> next;
                while(pp)
                {
                    ll aa = pp -> num;
                    ll num = pp -> sum;
                    if(aa > b)
                        break;
                    sum += ((ull)aa * (num * (begins + begins + num - 1) / 2));
                    begins = begins + num;
                    pp = pp -> next;
                }
                printf("%lld\n", sum);
            }
        }
    }
    return 0;
}
