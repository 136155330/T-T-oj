#include <bits/stdc++.h>
using namespace std;
const int MAXN = 100005;
int in[MAXN], out[MAXN], vids[MAXN];
bool judge(int n){
    int f1 = 0;
    for(int i = 1; i <= n; i ++){
        if(vids[i]){
            if(in[i] == 0){
                if(++ f1 > 1) return false;
            }
            if(in[i] > 1) return false;
        }
    }
    return true;
}
int main(){
    int a, b, step = 0, maxs = 0;
    while(~scanf("%d%d", &a, &b)){
        if(a == -1 && b == -1) break;
        else if(a == 0 && b == 0){
            step ++;
            if(judge(maxs)) printf("Case %d is a tree.\n", step);
            else printf("Case %d is not a tree.\n", step);
            memset(in, 0, sizeof(in));
            memset(out, 0, sizeof(out));
            memset(vids, 0, sizeof(vids));
        }
        else{
            in[b] ++, out[a] ++;
            vids[a] ++, vids[b] ++;
            maxs = max(maxs, a);
            maxs = max(maxs, b);
        }
    }
    return 0;
}