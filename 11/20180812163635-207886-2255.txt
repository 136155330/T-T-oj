/**
太难了不懂做！copy 个代码看下大佬怎么写的？
**/
#include<cstdio>
#include<cstring>
#include<iostream>
#include<sstream>
#include<algorithm>
#include<vector>
#include<bitset>
#include<set>
#include<queue>
#include<stack>
#include<map>
#include<cstdlib>
#include<cmath>
#define pb push_back
#define pa pair<int,int>
#define clr(a,b) memset(a,b,sizeof(a))
#define lson lr<<1,l,mid
#define rson lr<<1|1,mid+1,r
#define bug(x) printf("%d++++++++++++++++++++%d\n",x,x)
#define key_value ch[ch[root][1]][0]
#pragma comment(linker, "/STACK:102400000000,102400000000")
typedef  long long LL;
const LL  MOD = 1000000007;
const int N = 1e6+15;
const int maxn = 1e6+15;
const int letter = 130;
const int INF = 1e9;
const double pi=acos(-1.0);
const double eps=1e-10;
using namespace std;
inline int read()
{
    int x=0,f=1;char ch=getchar();
    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}
    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}
    return x*f;
}
int n,k,a[N],ch[21*N][2],cnt=1,num[21*N],bin[32];
void update(int x){
    int id=1,t;
    for(int i=29;i>=0;i--){
        t=(x>>i)&1;
        if(!ch[id][t]) ch[id][t]=++cnt;
        id=ch[id][t];
        num[id]++;
    }
}
int query(int x,int y){
    int ans=0,id=1,t;
    for(int i=29;i>=0;i--){
        int t=(x>>i)&1,p=(y>>i)&1;
        if(p==0){
            if(ch[id][!t]) ans+=num[ch[id][!t]];
            id=ch[id][t];
        }
        else {
            if(ch[id][!t]) id=ch[id][!t];
            else id=0;
        }
        if(!id) break;
    }
    return ans;
}
int main(){
    bin[0]=1;
    for(int i=1;i<=30;i++) bin[i]=bin[i-1]<<1;
    scanf("%d%d",&n,&k);
    n++;
    for(int i=2;i<=n;i++){
        scanf("%d",a+i),a[i]^=a[i-1];
    }
    LL sum=0;
    update(a[1]);
    for(int i=2;i<=n;i++){
        sum+=1ll*query(a[i],k-1);
        update(a[i]);
    }
    printf("%I64d\n",sum);
    return 0;
}

