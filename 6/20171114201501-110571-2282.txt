/*#include<stdio.h>
#include<string.h>
int a[105];
int main()
{
    int n;
    int k;
    int i;
    int j;
    int x;
    int tem;
    int z;
    while(~scanf("%d %d",&n,&k))
    {
        for(i=0; i<n; i++)
        {
            scanf("%d",&a[i]);
        }
        z=0;
        for(i=n-1; i!=-1; i--)
                {if(i==n-3)break;
                    for(j=0; j<i; j++)
            {
                if(a[j]>a[j+1])
                {
                    tem=a[j+1];
                    a[j+1]=a[j];
                    a[j]=tem;
                }
            }
            }
        for(i=0; i<n; i++)
        {
            if(i!=n-1)printf("%d ",a[i]);
            if(i==n-1)printf("%d\n",a[i]);
        }
    }
    return 0;
}*/
#include"cstdio"
#include"cstring"
using namespace std;
#define MAX 10000005//求MAX范围内的素数
long long su[MAX],cnt;
bool isprime[MAX];
void prime()
{
    cnt=1;
    memset(isprime,1,sizeof(isprime));//初始化认为所有数都为素数
    isprime[0]=isprime[1]=0;//0和1不是素数
    for(long long i=2; i<=MAX; i++)
    {
        if(isprime[i])
            su[cnt++]=i;//保存素数i
        for(long long j=1; j<cnt&&su[j]*i<MAX; j++)
        {
            isprime[su[j]*i]=0;//筛掉小于等于i的素数和i的积构成的合数
        }
    }
}
int main()
{
    prime();
    int n;
    while(~scanf("%d",&n))
    {

        if(isprime[n]==1)
            printf("Yes\n");
        else
            printf("No\n");
    }
    return 0;
}
