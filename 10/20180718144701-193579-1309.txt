#include<cstdio>
#include<cstring>
#include<iostream>
using namespace std;
const int MAXN = 1e6+1000;
//long long enl[MAXN];
int vids[MAXN];
int prime[MAXN];
/**
【思路】:
因为phi(xi)=ai
求sum(xi)
因为当p是素数时，phi(p)=p-1
根据规律可以发现，enl数组是乱序的
但是一个偶数的第一次出现肯定在p-1
而且这个值很小
题意的要求还是大于或等于
所以转化为寻找比Ai大的素数
**/
//void Init(){
//     enl[1]=1;
//     for(int i=2;i<MAXN;i++)
//       enl[i]=i;
//     for(int i=2;i<MAXN;i++)
//        if(enl[i]==i)
//           for(int j=i;j<MAXN;j+=i)
//              enl[j]=enl[j]/i*(i-1);//先进行除法是为了防止中间数据的溢出
//}
int primes()
{
    int i,j,temp,top;
    top=0;
    memset(vids,0,sizeof(vids));
    for(int i=2; i<MAXN; i++)
    {
        if(!vids[i])
        {
            prime[top++]=i;
        }
        for(int j=0; prime[j]*i<MAXN; j++)
        {
            vids[prime[j]*i]=1;
            if(i%prime[j]==0)
                break;
        }
    }
    return top;
}
int main()
{
    //init();
    int ans=primes();
    int t;
    while(~scanf("%d",&t))
    {
        int flag=0;
        while(t--)
        {
            int n;
            long long sum=0;
            scanf("%d",&n);
            for(int i=0; i<n; i++)
            {
                int num;
                scanf("%d",&num);
                for(int j=num+1; j<MAXN; j++)
                {
                    if(vids[j]==0)
                    {
                        sum+=j;
                        break;
                    }
                }
                //printf("%d\n",sum);
            }
            printf("Case %d: ",++flag);
            printf("%lld Xukha\n",sum);
        }
    }
    return 0;
}
