#include<cstdio>
#include<cstring>
#define mod 1000000007
/**
其实就是一题找规律
设f(n)为主串为n的字符串的子串的
最大数量，
可得如果 a[n]在字符串中出现过的话
f(n)=f(n-1)*2-f(flag[a[n]])
else
    f(n)=f(n-1)*2+1
**/
long long math[1000005];
long long dp[1000005];
long long flag[1000005];
int main()
{
    int n;
    while(~scanf("%d",&n))
    {
        memset(flag,0,sizeof(flag));
        memset(dp,0,sizeof(dp));
        memset(math,0,sizeof(math));
        for(int i=1; i<=n; i++)
            scanf("%lld",&math[i]);
        dp[0]=0;
        dp[1]=1;
        for(int i=1; i<=n; i++)
        {
            if(flag[math[i]]!=0)
            {
                dp[i]=(dp[i-1]*2-dp[flag[math[i]]-1]+mod)%mod;
            }
            else if(flag[math[i]]==0)
            {
                dp[i]=(dp[i-1]*2+1)%mod;
            }
            flag[math[i]]=i;
        }
        printf("%lld\n",dp[n]);
    }
    return 0;
}
