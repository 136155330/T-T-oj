#include<cstdio>
#include<iostream>
#include<cstring>
#include<algorithm>
using namespace std;
const int MAXN = 205;
int maps[MAXN][MAXN];
int dp[MAXN][MAXN];
int same(int a,int b)
{
    return maps[a][b];
}
int dfs(int l,int r)
{//printf("%d %d\n",l,r);
    if(dp[l][r]==-1)
    {
        if(l>=r)
        {
            dp[l][r]=0;
            return dp[l][r];
        }
        int ans=0;
        for(int i=l+1;i<=r-1;i++)
        {
            ans=max(dfs(l,i)+dfs(i,r),ans);
        }
        if(same(l,r))
        {
            ans++;
        }
         dp[l][r]=ans;
    }
    return dp[l][r];
}
int main()
{
    int n;
    while(~scanf("%d",&n))
    {
        for(int i=0; i<n; i++)
        {
            int a,b;
            scanf("%d%d",&a,&b);
            if(a>b)
                swap(a,b);
            maps[a][b]=1;
            maps[b][a+100]=1;
        }
        memset(dp,-1,sizeof(dp));
        int sum=0;
        for(int i=0;i<n;i++)
        {
            sum=max(sum,dfs(i,i+99));
        }
        printf("%d\n",sum);
    }
    return 0;
}
