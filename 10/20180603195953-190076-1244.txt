#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
const int MAXN = 50005;
int a[MAXN], tree[MAXN];
char q[15];
int n;
int lowbit(int x)
{
    return x & (-x);
}
void add(int k, int num)
{
    while(k<=n)
    {
        tree[k]+=num;
        k+=lowbit(k);
    }
}
int sums(int k)
{
    int sum=0;
    while(k)
    {
        sum+=tree[k];
        k-=lowbit(k);
    }
    return sum;
}
int main()
{

    int t;
    int flag=0;
    scanf("%d", &t);
    while (t--)
    {
        memset(tree, 0, sizeof(tree));
        memset(a, 0, sizeof(a));
        scanf("%d", &n);
        for (int i = 1; i <= n; i++)
        {
            scanf("%d", &a[i]);
            add(i, a[i]);
        }
         printf("Case %d:\n",++flag);  
        while(scanf("%s",q)==1)  
        {  
            if(q[0]=='E')break;  
            int x,y;  
            scanf("%d%d",&x,&y);  
            if(q[0]=='A')  
            {  
                add(x,y);  
                a[x]+=y;  
            }  
            else if(q[0]=='S')  
            {  
                add(x,-y);  
                a[x]-=y;  
            }  
            else if(q[0]=='Q')  
            {  
                printf("%d\n",sums(y)-sums(x-1));  
            }  
        }  
    }
    return 0;
}