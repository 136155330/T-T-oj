#include<stdio.h>
#include<algorithm>
#include<string.h>
#include<iostream>
using namespace std;
int m;
int n;
int x[105][105];
int dps[105][105];
int dp(int i,int j)
{
    int a;
    int b;
    if(dps[i][j]!=-10000000)
        return dps[i][j];
    if(i==n&&j==m)
        return x[n][m];
    if(i==n)///处理dfs[n][j]
    {
        b=dp(i,j+1);
        dps[i][j]=b+x[i][j];
        return dps[i][j];
    }
    else if(j==m)///处理dfs[i][m]
    {
        a=dp(i+1,j);///a=dp(i+1,j);
        dps[i][j]=a+x[i][j];
        return dps[i][j];
    }
    else if(i!=n&&j!=m)///不处理dfs[n-1][j]和dfs[i][n-1]???
    {
        a=dp(i+1,j);
        b=dp(i,j+1);
        dps[i][j]=max(a,b)+x[i][j];
        return dps[i][j];
    }
}

int main()
{
    int t;
    int i;
    int j;
    while(~scanf("%d",&t))
    {
        while(t--)
        {
            scanf("%d%d",&n,&m);
            for(i=1; i<=n; i++)
                for(j=1; j<=m; j++)
                {
                    scanf("%d",&x[i][j]);
                    dps[i][j]=-10000000;
                }
            printf("%d\n",dp(1,1));
        }
    }
    return 0;
}
