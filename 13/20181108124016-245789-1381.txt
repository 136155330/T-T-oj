#include<iostream>
#include<stdio.h>
#include<string.h>
#include <algorithm>
using namespace std;
typedef struct MYINT
{
    int ans;
    int time;
}myint;
int a[100005],b[100005],c[105],lv[105];
myint arr[100005];
bool cmp(const myint &a, const myint &b)
{
    return a.time < b.time;
}
int main()
{
    int n;
    while(scanf("%d",&n)!=EOF)
    {
        memset(arr, 0, sizeof(arr));
        memset(c,0,sizeof(c));
        memset(lv,0,sizeof(lv));
        memset(a, 0, sizeof(a));
        memset(b, 0, sizeof(b));
        if(n==0)
        {
            break;
        }
        for(int i = 0; i < n; i ++)
        {
            //scanf("%d%d",&a[i],&b[i]);
            scanf("%d%d", &arr[i].ans, &arr[i].time);
        }
        sort(arr, arr + n, cmp);
        for(int i = 0; i < n; i ++)
        {
            a[i + 1] = arr[i].ans;
            b[i + 1] = arr[i].time;
        }
        int g=1;
        for(int i=1; i<=b[n]; i++)
        {
            for(int j=1;j<=11;j++)
            {
                int gc=c[j-1];
                if(gc<c[j])
                {
                    gc=c[j];
                }
                if(gc<c[j+1])
                {
                    gc=c[j+1];
                }
                lv[j]=gc;
            }
            while(b[g]==i)
            {
                if(b[g]<=5)
                {
                    if(a[g]+1>=6-b[g]&&a[g]+1<=6+b[g])
                    {
                        lv[a[g]+1]++;
                    }
                }
                else
                {
                    lv[a[g]+1]++;
                }
                g++;
            }
             for(int k=1;k<=11;k++)
            {
                c[k]=lv[k];
            }
        }
        int max=c[1];
        for(int i=1; i<=11; i++)
        {
            if(c[i]>=max)
            {
                max=c[i];
            }
        }
        printf("%d\n",max);
    }
return 0;
}
