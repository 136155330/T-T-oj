#include <cstdio>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <vector>
/**
简直有毒，行末空格wa一天
 **/
using namespace std;
const int MAXN = 100000 + 5;
typedef long long ll;
typedef  struct NODE
{
    int num;
    ll l, r;
}node;
node arr[MAXN];
bool cmp(const node &a, const node &b)
{
    if(a.l != b.l)
    {
        return a.l < b.l;
    }
    else
    {
        return a.r > b.r;
    }
    return -1;
}
bool judge(const node &a, const node &b)
{
    if(b.l < a.r)
        return true;
    else
        return false;
}
vector<int>vec[MAXN];
int n;
int main()
{
    //freopen("test.in"  ,"r",stdin);
    //freopen("test1.out","w",stdout);
    int sum, num;
    while(~scanf("%d", &n))
    {
        sum = num = 0;
        for(int i = 0; i < n; i ++)
        {
            vec[i].clear();
        }
        memset(arr, 0, sizeof(arr));
        for(int i = 0; i < n; i ++)
        {
            scanf("%lld%lld", &arr[i].l, &arr[i].r);
            arr[i].num = i + 1;
        }
        sort(arr, arr + n, cmp);
        node temp = arr[0];
        int num, sum;
        num = sum = 0;
        for(int i = 0; i < n; i ++)
        {
            if(judge(temp, arr[i]))
            {
                temp.l = max(temp.l, arr[i].l);
                temp.r = min(temp.r, arr[i].r);
                vec[num].push_back(arr[i].num);
            }
            else
            {
                temp = arr[i];
                sum ++;
                num ++;
                vec[num].push_back(arr[i].num);
            }
        }
        printf("%d\n", sum + 1);
        for(int i = 0; i < num + 1; i ++)
        {
            for(int j = 0; j < vec[i].size(); j ++)
            {
                if(j != vec[i].size() - 1)
                printf("%d ", vec[i][j]);
                else
                    printf("%d", vec[i][j]);
            }
            printf("\n");
        }
    }
    return 0;
}
