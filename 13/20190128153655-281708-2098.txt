#include <cstdio>
#include <cstring>
#define mem(x) memset(x, 0, sizeof(x))
typedef long long ll;
ll dp[55][2];
ll digit[55];
ll dfs(int len, bool f6, bool limit)
{
    if(len == 0)
        return 1;
    if(!limit && dp[len][f6])
        return dp[len][f6];
    ll cnt = 0, maxs = limit ? digit[len] : 9;
    for(int i = 0; i <= maxs; i ++)
    {
        if((f6 && i == 2) || i == 4)
            continue;
        cnt += dfs(len - 1, i == 6, limit && i == maxs);
    }
    return limit ? cnt : dp[len][f6] = cnt;
}
ll solve(ll num)
{
    mem(digit);
    int i = 0;
    while(num)
    {
        ll a = num % 10;
        digit[++ i] = a;
        num /= 10;
    }
    return dfs(i, false, true);
}
ll a, b;
int main()
{
    while(~scanf("%lld%lld", &b, &a))
    {
        mem(dp);
        if(!a && !b)
            break;
        ll re = solve(a) - solve(b - 1);
        printf("%lld\n", re);
    }
}
