
/**
 dp好难啊！嘤嘤嘤
 假设dp[i]是以r为i结束的【权重的最大值】最小
 dp[ri] = min(dp[ri], max(dp[li], wi))
 **/
#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <queue>
using namespace std;
int n, m;
typedef long long ll;
typedef struct MYINT
{
    int l, r;
    ll w;
}myint;
ll dp[100000];
myint que[100000];
bool cmp(const myint &a, const myint &b)
{
    return a.l < b.l;
}
int main()
{
    while(~scanf("%d%d", &n, &m))
    {
        for(int i = 0; i <= n; i ++)
            dp[i] = __LONG_LONG_MAX__;
        
        for(int i = 0; i < m; i ++)
        {
            scanf("%d%d%lld", &que[i].l, &que[i].r, &que[i].w);
        }
        sort(que, que + m, cmp);
        dp[1] = 0;
        for(int i = 0; i < m; i ++)
        {
            dp[que[i].r] = min(dp[que[i].r], max(que[i].w, dp[que[i].l]));
        }
        if(dp[n] != __LONG_LONG_MAX__)
        printf("%lld\n", dp[n]);
        else
            printf("invalid data\n");
    }
}
