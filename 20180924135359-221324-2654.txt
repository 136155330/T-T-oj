#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
const int MAXN = 1000005;
int dp[MAXN];
int arr[MAXN];
int dps[MAXN];
int main()
{
    int t;
    scanf("%d",&t);
    while(t --)
    {
        int n;
        scanf("%d",&n);
        memset(dp, 0, sizeof(dp));
        memset(dps, 0, sizeof(dps));
        memset(arr, 0, sizeof(arr));
        for(int i = 1; i <= n; i ++)
        {
            scanf("%d",&arr[i]);
        }
        dp[0] = 0;
        int re1 = 0;
        int sum = 0;
        for(int i = 1; i <= n; i++)
        {
            sum += arr[i];
            dp[i] = max(dp[i - 1] + arr[i], arr[i]);
            re1 = max(re1, dp[i]);
        }
        for(int i = 1; i <= n; i++)
        {
            arr[i] = -arr[i];
        }
        int re2 = 0;
        for(int i = 1; i <= n; i ++)
        {
            dps[i] = max(dps[i - 1] + arr[i], arr[i]);
            re2 = max(re2, dps[i]);
        }
        re2 = -re2;
        sum -= re2;
        int result = max(sum, re1);
        printf("%d\n",result);
        
    }
    return 0;
}
