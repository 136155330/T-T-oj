#include<bits/stdc++.h>
#define f1 freopen("C:\\Users\\user\\Desktop\\data.in", "r", stdin);
#define f2 freopen("C:\\Users\\user\\Desktop\\data.out", "w", stdout);
using namespace std;
#define mem(x) memset(x, 0, sizeof(x));
const int MAXN = 105;
/**
5 22532 35222
8 13512311 11132513
**/
int main()
{
    //f1;
    //f2;
    int n;
    while(scanf("%d", &n) != EOF)
    {
        int arr1[MAXN];
        int arr2[MAXN];
        char str[MAXN];
        stack<int>stk;
        queue<string>que;
        mem(arr1);
        mem(arr2);
        mem(str);
        scanf("%s", str);
        for(int i = 0; i < n; i ++)
            arr1[i] = str[i] - '0';
        scanf("%s", str);
        for(int i = 0; i < n; i ++)
            arr2[i] = str[i] - '0';
        while(!stk.empty())
            stk.pop();
        while(!que.empty())
            que.pop();
        mem(str);
        int j = 0;
        for(int i = 0; i < n; i ++)
        {
            while(!stk.empty() && stk.top() == arr2[j])
            {
                stk.pop();
                j ++;
                que.push("out");
            }
            stk.push(arr1[i]);
            que.push("in");
        }
        while(!stk.empty())
        {
            if(stk.top() == arr2[j])
            {
                stk.pop();
                que.push("out");
                j ++;
            }
            else
            {
                stk.pop();
            }
        }
        if(j == n)
        {
            printf("Yes.\n");
            while(!que.empty())
            {
                cout << que.front() << endl;
                que.pop();
            }
            printf("FINISH\n");
        }
        else
        {
            printf("No.\n");
            while(!que.empty())
            {
               // cout << que.front() << endl;
                que.pop();
            }
            printf("FINISH\n");
        }
    }
    return 0;
}
