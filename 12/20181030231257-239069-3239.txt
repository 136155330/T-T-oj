#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
const int MAXN = 4005;
int dp[MAXN];
int n, a, b, c;
int main()
{
    while(~scanf("%d%d%d%d", &n, &a, &b, &c))
    {
        memset(dp, 0, sizeof(dp));
        for(int i = 0; i <= n; i ++)
        {
            if(i - a == 0)
            {
                dp[i] = max(dp[i], dp[i - a] + 1);
            }
            if(i - b == 0)
            {
                dp[i] = max(dp[i], dp[i - b] + 1);
            }
            if(i - c == 0)
            {
                dp[i] = max(dp[i], dp[i - c] + 1);
            }
            if(i - a > 0)
            {
                if(dp[i - a])
                {
                    dp[i] = max(dp[i], dp[i - a] + 1);
                }
            }
            if(i - b > 0)
            {
                if(dp[i - b])
                {
                    dp[i] = max(dp[i], dp[i - b] + 1);
                }
            }
            if(i - c > 0)
            {
                if(dp[i - c])
                {
                    dp[i] = max(dp[i], dp[i - c] + 1);
                }
            }
        }
        printf("%d\n", dp[n]);
    }
}
