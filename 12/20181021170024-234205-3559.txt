#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
typedef long long ll;
const int MAXN = 1e5 + 5;
ll arr[MAXN];
bool cmp(const ll &a, const ll &b)
{
    return a < b;
}
int main()
{
    int n, m;
    while(~scanf("%d%d", &n, &m))
    {
        memset(arr, 0, sizeof(arr));
        for(int i = 0; i < m; i ++)
        {
            scanf("%lld", &arr[i]);
        }
        sort(arr, arr + m, cmp);
        ll maxs = 0;
        ll mid = arr[0];
        maxs = arr[0] - 1;
        for(int i = 0; i < m - 1; i ++)
        {
            mid = (arr[i] + arr[i + 1]) / 2;
            /**
             (arr[i] + arr[i + 1]) / 2 - arr[i]
            = (arr[i] + arr[i + 1]) / 2 - (2 * arr[i]) / 2
            = (arr[i + 1] - arr[i]) / 2
             £¨2 * arr[i + 1]£©/ 2 - (arr[i + 1] + arr[i]) / 2
             = (arr[i + 1] - arr[i]) / 2
             **/
            //printf("mid = %d\n", mid);
            if(mid - arr[i] == 0)
                continue;
            if(arr[i + 1] - mid == 0)
                continue;
            ll mins = min(mid - arr[i], arr[i + 1] - mid);
            maxs = max(maxs, mins);
            /**
             arr[i + 1] - arr[i] / 2
             **/
            /**
             arr[i + 1] - arr[i] / 2
             **/
        }
        maxs = max(maxs, n - arr[m - 1]);
        printf("%lld\n",maxs);
    }
    return 0;
}
