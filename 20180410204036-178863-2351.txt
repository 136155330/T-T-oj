#include<bits/stdc++.h>
#define MAXN 500005
/**
5
1 1
1 2
1 3
3 3
2 2
**/
using namespace std;
typedef struct MYINT
{
    int x;
    int y;
    int flag;
} myint;
myint math[MAXN];
int pre[MAXN];
void Init()
{
    for(int i=0; i<MAXN; i++)
    {
        pre[i]=i;
    }
}
int acfind(int x)
{
    return pre[x]==x?x:pre[x]=acfind(pre[x]);
}
int unionjoin(int x,int y)
{
    int a;
    int b;
    a=acfind(x);
    b=acfind(y);
    if(a!=b)
        pre[b]=a;
}
bool cmp1(myint a,myint b)
{
    return a.x>b.x;
}
bool cmp2(myint a,myint b)
{
    return a.y>b.y;
}
int main()
{
    int n;
    while(~scanf("%d",&n))
    {
        Init();
        memset(math,0,sizeof(math));
        for(int i=0; i<n; i++)
            {scanf("%d %d",&math[i].x,&math[i].y);
            math[i].flag=i;
            }
        sort(math,math+n,cmp1);
        //for(int i=0;i<n;i++)
          //  printf("%d %d,\n",math[i].x,math[i].y);
        for(int i=1; i<n; i++)
        {
            if(math[i].x==math[i-1].x)
                unionjoin(math[i].flag,math[i-1].flag);
        }
        sort(math,math+n,cmp2);
        //for(int i=0;i<n;i++)
          //  printf("%d %d.\n",math[i].x,math[i].y);
        for(int i=1; i<n; i++)
        {
            if(math[i].y==math[i-1].y)
                unionjoin(math[i].flag,math[i-1].flag);
        }
        int ans=acfind(0);
        int flag=0;
        for(int i=1; i<n; i++)
        {
            if(ans!=acfind(i))
            {
                printf("NO\n");
                flag=1;
                break;
            }
        }
        if(flag==0)
            printf("YES\n");
    }
    return 0;
}
